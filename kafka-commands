curl -i -X POST -H "Accept:application/json" -H  "Content-Type:application/json" http://localhost:8083/connectors/ -d @register-oracle.json

./kafka-console-consumer.sh --topic OSALAMI.DEBEZIUM.CUSTOMERS --bootstrap-server kafka:9092  --from-beginning


./kafka-topics.sh --list --zookeeper zookeeper:2181


./kafka-topics.sh --list --bootstrap-server kafka:9092




./kafka-console-consumer.sh --topic TestTopic --bootstrap-server kafka:9092  --from-beginning



./kafka-console-producer.sh --topic TestTopic --bootstrap-server kafka:9092


./kafka-topics.sh --create --topic TestTopic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1


./kafka-console-producer.sh --topic TestTopic --bootstrap-server kafka:9092 --property parse.key=true --property key.separator=":"


./kafka-console-consumer.sh --topic my-topic --bootstrap-server kafka:9092  --from-beginning


./kafka-console-consumer.sh --topic my-topic --bootstrap-server kafka:9092 \
 --from-beginning \
 --property print.key=true \
 --property key.separator=":"


 Kafka CAT Consumer Mode

 kafkacat -b kafka:9092 -t OSALAMI.DEBEZIUM.BKEVE



 kafkacat -b kafka:9092 -t new_topic -P



{
  "id": 121,
  "name": "Tunery",
  "age": "78"
}


CREATE STREAM PEOPLE_JSON (ID BIGINT, NAME STRING) WITH (VALUE_FORMAT='JSON', KAFKA_TOPIC='JsonTopic');

CREATE STREAM ID_JSON (VALUE.PAYLOAD.AFTER.ID BIGINT) WITH (VALUE_FORMAT='JSON', KAFKA_TOPIC='OSALAMI.DEBEZIUM.CUSTOMERS');


CREATE STREAM TESTING_VIEW
   (Talue varchar)
   WITH (KAFKA_TOPIC='new-topic', VALUE_FORMAT='AVRO');

Rabbit MQ

   docker run -d --hostname osalami-rabbit --name rabbitMQ -p 20443:15672 -p 5672:5672 -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=password2$ rabbitmq:3-management



rm ./kafka-logs/meta.properties; docker-compose down 
docker-compose up -d

   

   DEBEZIUM.ORACLE
   OSALAMI
   OSALAMI.DEBEZIUM.BKEVE
   OSALAMI.DEBEZIUM.BKSLD
   OSALAMI.DEBEZIUM.CUSTOMERS


   LOGMINER connectors

   {"name":"oracle-connector-201","config":{"connector.class":"io.debezium.connector.oracle.OracleConnector","tasks.max":"1","database.server.name":"ORCL","database.hostname":"","database.port":"1521","database.user":"ADMIN","database.password":"","database.dbname":"ORCL","database.history.kafka.bootstrap.servers":"kafka:9092","database.history.kafka.topic":"DEBEZIUM.ORACLE","schema.include.list": "ADMIN","table.include.list":"ADMIN.CUSTOMER","database.oracle.version":"12+","database.connection.adapter":"logminer","snapshot.mode":"initial"}}

   {"name":"oracle-connector-201","config":{"connector.class":"io.debezium.connector.oracle.OracleConnector","tasks.max":"1","database.server.name":"ORCL","database.hostname":"192.168.1.23","database.port":"1521","database.user":"dbzuser","database.password":"dbz","database.dbname":"ORCL","database.history.kafka.bootstrap.servers":"kafka:9092","database.history.kafka.topic":"DEBEZIUM.ORACLE","schema.include.list": "DEBEZIUM","table.include.list":"DEBEZIUM.CUSTOMERS","database.oracle.version":"11","database.connection.adapter":"logminer","snapshot.mode":"initial","database.tablename.case.insensitive":"true"}}
   
   SetUp

   https://docs.confluent.io/kafka-connect-oracle-cdc/current/prereqs-validation.html


   Create Network

   docker network create alert-network